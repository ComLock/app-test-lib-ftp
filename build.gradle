plugins {
	id 'java' // Needed for assemble and build
	id 'maven-publish' // Provides publishing and publishToMavenLocal
	id 'com.enonic.defaults' version '2.0.1' // Publishing
	id 'com.enonic.xp.app' version '2.0.0'
	id 'com.moowork.node' version '1.3.1'
}


repositories {
	xp.enonicRepo()
	//mavenLocal()
	jcenter()
}


app {
    name = project.appName
    group = 'com.enonic.app'
    displayName = project.displayName
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
    systemVersion = "${xpVersion}"
}


dependencies {
    include 'com.enonic.lib:lib-util:2.2.1'

    //include project(':lib-ftp') // NOTE: jar file must already be built.

    include files('../../enonic/lib-ftp/build/libs/lib-ftp-1.0.1-SNAPSHOT.jar')
    // Including jar files does not add the dependencies of that jar file
    // So you have to add them manually
    include "com.enonic.xp:lib-io:${xpVersion}"
    include 'commons-net:commons-net:3.7.2'
} // dependencies


tasks.withType(Copy) {
  includeEmptyDirs = false
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle wrapper
//──────────────────────────────────────────────────────────────────────────────
wrapper {
	distributionUrl = "${gradleDistributionUrl}"
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle node plugin
//──────────────────────────────────────────────────────────────────────────────
node {
	version "${nodeVersion}"
	download true
}


//──────────────────────────────────────────────────────────────────────────────
// Webpack
//──────────────────────────────────────────────────────────────────────────────
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources { // Paths relative to src/main/resources
            //srcDir 'src/main/resources'
            exclude 'assets/**/*.svg'
        }
    }
}

task webpack(type:NodeTask) {
	dependsOn yarn_install
	mustRunAfter yarn_install
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color'
	]
	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
}


task watch(type:NodeTask) {
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
		'--watch'
	]
}


processResources {
	dependsOn webpack
	mustRunAfter webpack

	exclude '**/.gitkeep'

	// Let webpack handle these (rather than gradle)
	exclude '**/*.css'
	exclude '**/*.es'
	exclude '**/*.js'
	exclude '**/*.jsx'
	exclude '**/*.less'
	exclude '**/*.sass'
	exclude '**/*.scss'
	exclude '**/*.styl'
}
